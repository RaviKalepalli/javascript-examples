'use strict';

const test = require('ava');
const webdriverio = require('webdriverio');
const { By, Eyes, ConsoleLogHandler } = require('eyes.selenium');

const { MatchLevel } = require('eyes.sdk');

const appName = 'Hello World!';
let driver = null,
    browser = null,
    eyes = null;

test.before(() => {
  const options = { desiredCapabilities: { browserName: 'chrome' } };
  driver = webdriverio.remote(options);
  browser = driver.init();

  eyes = new Eyes();
  //eyes.setApiKey(process.env.API_KEY);
  eyes.setApiKey("9RkMajXrzS1Zu110oTWQps102CHiPRPmeyND99E9iL0G7yAc110");
  eyes.setLogHandler(new ConsoleLogHandler(true));
});

test.beforeEach(async t => {
  const testName = t.title.replace("beforeEach for ", "");
  await eyes.open(browser, appName, testName, { width: 800, height: 600 });
});

test('Check element by name test!', async () => {
  try {
    await browser.url('https://yuriieasternpeak.github.io/webdriver.io-test-html-pages/frame.html');

    const defaultMatchSettings = eyes.getDefaultMatchSettings();
    defaultMatchSettings.setMatchLevel(MatchLevel.Exact);
    eyes.setDefaultMatchSettings(defaultMatchSettings);

    const name = 'frame1'; // name
    // const name = 'frame2'; // name
    await eyes.checkElementBySelector(By.name(name), null, 'Text block');

    await eyes.close();
  } finally {
    await browser.end();
    await eyes.abortIfNotClosed();
  }
});
//# sourceMappingURL=node_modules/.cache/ava/cb51c6be6861b3691ede661e0b9b0446.js.map